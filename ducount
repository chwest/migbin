#!/bin/bash
function treesize() {
  if [[ -z $1 ]]; then 
    depth=2
  else 
    depth=$1
  fi
  tree -adf -L $depth > tmp_treestuff.txt
  echo -e '  SIZE\t'' FILES\t''   .'
  cat tmp_treestuff.txt | sed -rn 's/\s/:/pg' | while read x ; do 
    if [[ $x =~ .*\.\/.* ]]; then 
      treestuff=$( printf "$x" | grep -oP '.*(?=\.\/)' | sed -rn 's/:/ /gp' )
      dirn=$( printf "$x" | grep -oP '.*\K\.\/.+' )
      size=$( du -sh $dirn 2>/dev/null | awk '{print $1}' )
      filecount=$( find $dirn -type f 2>/dev/null | cut -d '/' -f 1 | sort | uniq -c | awk '{print $1}' )
      dirinfo=$( printf '%-6s %-6s' "$size" "$filecount" )
      if [[ $dirn == *'->'* ]]; then 
        dirinfo=$( echo 'symlink      ' )
        nopath=$( echo $dirn | awk -F ":" '{print $1,"â†’",$3}' | sed -rn 's/(\.\/)?(.+)/\2/p' )
        echo -e "[ $dirinfo ]"'  '"$treestuff$nopath"
      else 
        nopath=$( echo $dirn | rev | cut -d '/' -f 1 | rev )
        echo -e "[ $dirinfo ]"'  '"$treestuff$nopath"
      fi
    else 
      echo $x | sed -rn 's/:/ /gp'
    fi
  done
  if [ -s tmp_treestuff.txt ]; then 
    rm -f tmp_treestuff.txt
  fi
}
treesize $1
