#!/bin/bash

# make sure destination user is defined
if [[ -z "$USER" ]]
then 
  user="$USER"
else 
  user=$(whoami)
fi

# check to make sure user is not root. 
if [[ "$user" == 'root' || -z "$user" ]]
then 
  echo "Cannot run as root. Please dj in before running mailsync."
  exit 1 
fi 

# Get directory paths for destination
homedir=$(pwd | cut -d '/' -f 1,2,3)
migdir="${homedir}/migration/migstuff"

# check to see if ssh has already been setup and directories are present 
if [[ ! -d ${migdir} || ! -s ${migdir}/source.txt || ! -s ${migdir}/id_rsa ]]
then
  setupssh
  mkdir -p "${migdir}"/logs/ 2>/dev/null
fi

# Get SSH credentials for connection
creds=$(cat "${migdir}"/source.txt)
keyFile="${migdir}/id_rsa"
sshConn="ssh -q -i ${keyFile} ${creds}"

# Test SSH connection
function testConn() {
    ${sshConn} exit
    echo $?
}

echo -n "Checking SSH connection to source. "
connStatusCode=$(testConn)

if [[ "$connStatusCode" == '255' ]]
then 
  connStatus='fail'
  echo "Connection $connStatus"
  exit 1
elif [[ "$connStatusCode" == '0' ]]
then 
  connStatus='success'
  echo "Connection $connStatus"
else 
  echo 'unexpected output, check ssh connection files and credentials'
fi

# Get the source user mail directory path and contents
srcHome=`${sshConn} "pwd && exit"`

# Write the rsync lines 
if [[ -z "$1" ]]
then 
  rsync -avP -e \"ssh -i ${keyFile}\" ${creds}:${srcHome}/mail/ ${homedir}/mail/
  rsync --ignore-existing -avP -e \"ssh -i ${keyFile}\" ${creds}:${srcHome}/etc/ ${homedir}/etc/
else 
  rsync -e \"ssh -i ${keyFile}\" ${creds}:${srcHome}/mail/${1}/ ${homedir}/mail/${1}/
  rsync --ignore-existing -avP -e \"ssh -i ${keyFile}\" ${creds}:${srcHome}/etc/${1}/ ${homedir}/etc/${1}/
fi 

############################################
# OLD MAILSYNC
# check to see if there's an argument

# if [ -z "$1" ]; then
#   echo -e 'USAGE: mailsync [domain]'
#   exit 1
# fi
# 
# if [ ! -d ~/migration/migstuff/ ] ; then
#   mkdir -p ~/migration/migstuff/logs/ 2>/dev/null
# fi
# 
# mkdir -p ~/migration/migstuff/logs/$1/ 2>/dev/null
# 
# echo ''
# timestamp=$(date +%s)
# 
# 
# echo ' ' > ~/migration/migstuff/logs/"$1"/beforesync_"$1"_"$timestamp".txt
# echo ' ' > ~/migration/migstuff/logs/"$1"/aftersync_"$1"_"$timestamp".txt
# 
# # function to count inodes in mail dir for domain
# 
# function mail_Count() {
#   if test -d ~/mail/$1; then
#     (cd ~/mail/$1 ; find . -printf "%h\n" | cut -d/ -f-2 | sort | uniq -c | sort -rn)  
#   else
#     echo "NO MAIL FOLDER MADE, CHECK SPELLING OF DOMAIN."
#     exit 1
#   fi
# }
# 
# # format and send count to file
# 
# function count_and_Format() {
#   if [[ -d ~/mail/$1 ]]; then
#     mail_Count $1 | sed -rn "s/\s*\.\/(.*+)/\t\1@$1/p"
#   fi
# }
# 
# echo -e "Migrating mail for $1\n"
# 
# # record mail box state from before sync
# 
# echo -e 'PREVIOUS' 1> ~/migration/migstuff/logs/"$1"/beforesync_"$1"_"$timestamp".txt  
# count_and_Format $1 1>> ~/migration/migstuff/logs/"$1"/beforesync_"$1"_"$timestamp".txt
# 
# # do the actual sync
# 
# creds=$(cat ~/migration/migstuff/source.txt)
# mig_key=$(ls ~/migration/migstuff/id_rsa)
# connection=$(echo "ssh -i $mig_key")
# # echo "$connection"
# 
# # check rsync version for progress option
# rsync_version=$(rsync --version | grep -oP 'rsync\s+version\s\K(\d\.\d)' | sed -rn 's/\.//p')
# 
# rsync --dry-run -avP -e "$connection" $creds:~/mail/${1%/} ~/mail 1> ~/migration/migstuff/logs/"$1"/dryrun_mailsync_mail_log_"$timestamp".txt &
# rsync --dry-run --ignore-existing -avP -e "$connection" $creds:~/etc/${1%/} ~/etc 1> ~/migration/migstuff/logs/"$1"/dryrun_mailsync_etc_log_"$timestamp".txt &
# 
# if [[ "$rsync_version" -lt "31" ]]; then
#   echo "Syncing mail, no progress bar available"
#   # sync etc
#   rsync -h --ignore-existing -a --no-i-r -e "$connection" $creds:~/etc/${1%/} ~/etc | tee ~/migration/migstuff/logs/"$1"/mailsync_log_"$timestamp".txt
#   # sync mail
#   rsync -h -a --no-i-r -e "$connection" $creds:~/mail/${1%/} ~/mail | tee -a ~/migration/migstuff/logs/"$1"/mailsync_log_"$timestamp".txt
# else
#   # sync etc
#   rsync -h --ignore-existing -a --no-i-r --info=progress2 -e "$connection" $creds:~/etc/${1%/} ~/etc | tee ~/migration/migstuff/logs/"$1"/mailsync_log_"$timestamp".txt
#   # sync mail
#   rsync -h -a --no-i-r --info=progress2 -e "$connection" $creds:~/mail/${1%/} ~/mail | tee -a ~/migration/migstuff/logs/"$1"/mailsync_log_"$timestamp".txt
# fi
# 
# # count inodes of updated mail boxes
# 
# echo -e 'CURRENT' 1> ~/migration/migstuff/logs/"$1"/aftersync_"$1"_"$timestamp".txt
# count_and_Format $1 1>> ~/migration/migstuff/logs/"$1"/aftersync_"$1"_"$timestamp".txt
# 
# # final output, compare states
# 
# diff -T -y --ignore-matching-lines=CUR ~/migration/migstuff/logs/$1/beforesync_"$1"_"$timestamp".txt ~/migration/migstuff/logs/$1/aftersync_"$1"_"$timestamp".txt 1> ~/migration/migstuff/logs/$1/"$1"_"$timestamp".txt
# 
# sleep 1
# 
# echo ' '
# 
# cat ~/migration/migstuff/logs/$1/"$1"_"$timestamp".txt
# 
# echo ' '